#
# NOTE: this runs the omnibus cookbook, but does not actually run Omnibus. Use
# 'kichen converge' to setup the virtual machine and then `kitchen login` to
# SSH into the machine and run Omnibus.
#

driver:
  name: vagrant
  forward_agent: yes
  customize:
    cpus: 4
    memory: 4096
  synced_folders:
    - ['..', '/home/vagrant/chef-dk']
    - ['../../omnibus', '/home/vagrant/omnibus']
    - ['../../omnibus-software', '/home/vagrant/omnibus-software']

provisioner:
  name: chef_zero
  attributes:
    vagrant:
      this_key_exists_so_we_have_a_vagrant_key: true
    omnibus:
      build_user:          vagrant
      build_user_group:    vagrant
      build_user_password: vagrant
      install_dir: /opt/chefdk

platforms:
  - name: centos-6
    run_list: yum-epel::default
  - name: centos-7
    run_list: yum-epel::default
  - name: debian-9
    run_list: apt::default
  - name: ubuntu-16.04
    run_list: apt::default
  # The following (private) boxes are shared via Vagrant Cloud and are only
  # available to users working for Chef. Sorry, it's about software licensing.
  #
  # Chef-internal users, you will need to:
  # 1.  Create an Vagrant Cloud account:  http://vagrantcloud.com/
  # 2.  Ping #releng-support with your account name to be added to the relevant team.
  # 3.  Do `vagrant login` with your creds so that you can download the private boxes.
  #
  # The macOS boxes are VMware only also. You can enable VMware Fusion
  # by activating the `kitchen.vmware.yml` file with the `KITCHEN_LOCAL_YAML`
  # environment variable:
  #
  #   KITCHEN_LOCAL_YAML=kitchen.vmware.yml kitchen converge chefdk-macos-1013
  #

  # macOS
  - name: macos-10.13
    driver:
      provider: vmware_fusion
      customize:
        numvcpus: 4
        memsize: 4096
      box: chef/macos-10.13 # private
      synced_folders:
      - ['..', '/Users/vagrant/chef']
      - ['../../omnibus', '/Users/vagrant/omnibus']
      - ['../../omnibus-software', '/Users/vagrant/omnibus-software']

  # By adding an `i386` to the name the Omnibus cookbook's `load-omnibus-toolchain.bat`
  # will load the 32-bit version of the MinGW toolchain.
  - name: windows-2012r2-standard-i386
    provisioner:
      attributes:
        omnibus:
          build_user:          vagrant
          build_user_group:    Administrators
          build_user_password: vagrant
          install_dir: /opscode/chefdk
    driver:
      box: chef/windows-server-2012r2-standard # private
      synced_folders:
      # We have to mount this repos enclosing folder as the Omnibus build
      # gets cranky if the mounted ChefDK source folder is a symlink. This
      # mounts at `C:\vagrant\code` and the ChefDK source folder is available
      # at `C:\vagrant\code\chef-dk`
      - ['../..', '/vagrant/code']

suites:
  - name: chefdk
    run_list:
      - omnibus::default
